stages:
  - lint
  - test
  - pages
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/
  AUTO_DEVOPS_PLATFORM_TARGET: "EC2"
  UV_CACHE_DIR: "$CI_PROJECT_DIR/.uv-cache"

cache:
  paths:
    - .uv-cache/
    - uv.lock

# Сборка образа
build:
  stage: build
  image: docker:24-dind
  services:
    - docker:24-dind
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v(?:\d+\.){2}\d+-release$/'
  script:
    - echo "Building API image.."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE:latest" -f docker/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - echo "Building complete."

# Деплой
deploy:
  stage: deploy
  image: alpine:latest

  # Запуск только на тегах вида v1.2.3-release
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v(?:\d+\.){2}\d+-release$/'

  variables:
    # Фолбэк-файл, если ключ пришёл строкой
    SSH_KEY_TMP: "$CI_PROJECT_DIR/.ssh_id_rsa"

  before_script:
    - apk add --no-cache openssh-client rsync
    - eval "$(ssh-agent -s)"

    # --- готовим ключ ---
    - |
      if [ -z "$SSH_PRIVATE_KEY" ]; then
        echo "❌  SSH_PRIVATE_KEY is empty"; exit 1
      fi

      if [ -f "$SSH_PRIVATE_KEY" ]; then          # File-variable → путь
        KEY_PATH="$SSH_PRIVATE_KEY"
      else                                        # Строка → пишем файл сами
        printf '%b\n' "$SSH_PRIVATE_KEY" | tr -d '\r' > "$SSH_KEY_TMP"
        KEY_PATH="$SSH_KEY_TMP"
      fi

      chmod 600 "$KEY_PATH"
      ssh-add  "$KEY_PATH"

    # --- SSH config ---
    - mkdir -p ~/.ssh
    - printf 'Host *\n\tStrictHostKeyChecking no\n' > ~/.ssh/config

  script:
    - |
      ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-71-173-220.eu-central-1.compute.amazonaws.com \
        "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"

    - rsync -avz docker/compose.yml \
        ec2-user@ec2-3-71-173-220.eu-central-1.compute.amazonaws.com:~/motokonig/compose.yml

    - rsync -avz Caddyfile \
        ec2-user@ec2-3-71-173-220.eu-central-1.compute.amazonaws.com:~/motokonig/Caddyfile

    - |
      ssh ec2-user@ec2-3-71-173-220.eu-central-1.compute.amazonaws.com \
        "docker-compose -f ~/motokonig/compose.yml up -d --no-deps backend --force-recreate"