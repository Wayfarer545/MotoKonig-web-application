"""init

Revision ID: 4c5c1204d72e
Revises: 
Create Date: 2025-06-12 20:25:42.163152

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import advanced_alchemy


# revision identifiers, used by Alembic.
revision: str = '4c5c1204d72e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('username', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'OPERATOR', 'USER', name='userrole', native_enum=False), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('events',
    sa.Column('organizer_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('event_type', sa.Enum('PUBLIC', 'PRIVATE', name='event_type', native_enum=False), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('photo_urls', sa.Text(), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], name=op.f('fk_events_organizer_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_events'))
    )
    op.create_index(op.f('ix_events_event_type'), 'events', ['event_type'], unique=False)
    op.create_index(op.f('ix_events_organizer_id'), 'events', ['organizer_id'], unique=False)
    op.create_index(op.f('ix_events_start_time'), 'events', ['start_time'], unique=False)
    op.create_index(op.f('ix_events_title'), 'events', ['title'], unique=False)
    op.create_table('listings',
    sa.Column('seller_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.Enum('MOTORCYCLES', 'PARTS', 'EQUIPMENT', 'SERVICES', 'ACCESSORIES', name='listing_category', native_enum=False), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('is_negotiable', sa.Boolean(), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'MODERATION', 'ACTIVE', 'SOLD', 'EXPIRED', 'REJECTED', 'SUSPENDED', name='listing_status', native_enum=False), nullable=False),
    sa.Column('moderation_notes', sa.Text(), nullable=True),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('contact_email', sa.String(length=100), nullable=True),
    sa.Column('photo_urls', sa.Text(), nullable=True),
    sa.Column('views_count', sa.Integer(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.String(length=50), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], name=op.f('fk_listings_seller_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_listings'))
    )
    op.create_index(op.f('ix_listings_category'), 'listings', ['category'], unique=False)
    op.create_index(op.f('ix_listings_is_featured'), 'listings', ['is_featured'], unique=False)
    op.create_index(op.f('ix_listings_location'), 'listings', ['location'], unique=False)
    op.create_index(op.f('ix_listings_price'), 'listings', ['price'], unique=False)
    op.create_index(op.f('ix_listings_seller_id'), 'listings', ['seller_id'], unique=False)
    op.create_index(op.f('ix_listings_status'), 'listings', ['status'], unique=False)
    op.create_index(op.f('ix_listings_title'), 'listings', ['title'], unique=False)
    op.create_table('media_files',
    sa.Column('owner_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('file_type', sa.Enum('AVATAR', 'MOTORCYCLE_PHOTO', 'EVENT_PHOTO', 'DOCUMENT', 'TEMP', name='file_type', native_enum=False), nullable=False),
    sa.Column('original_name', sa.String(length=255), nullable=False),
    sa.Column('file_key', sa.String(length=500), nullable=False),
    sa.Column('bucket', sa.String(length=100), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('size_bytes', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=1000), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('file_metadata', sa.Text(), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_media_files_owner_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_media_files'))
    )
    op.create_index(op.f('ix_media_files_bucket'), 'media_files', ['bucket'], unique=False)
    op.create_index(op.f('ix_media_files_file_key'), 'media_files', ['file_key'], unique=True)
    op.create_index(op.f('ix_media_files_file_type'), 'media_files', ['file_type'], unique=False)
    op.create_index(op.f('ix_media_files_is_public'), 'media_files', ['is_public'], unique=False)
    op.create_index(op.f('ix_media_files_owner_id'), 'media_files', ['owner_id'], unique=False)
    op.create_table('moto_clubs',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('president_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('max_members', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('avatar_url', sa.String(length=1000), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('founded_date', sa.String(length=50), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['president_id'], ['users.id'], name=op.f('fk_moto_clubs_president_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_moto_clubs'))
    )
    op.create_index(op.f('ix_moto_clubs_is_active'), 'moto_clubs', ['is_active'], unique=False)
    op.create_index(op.f('ix_moto_clubs_is_public'), 'moto_clubs', ['is_public'], unique=False)
    op.create_index(op.f('ix_moto_clubs_name'), 'moto_clubs', ['name'], unique=False)
    op.create_index(op.f('ix_moto_clubs_president_id'), 'moto_clubs', ['president_id'], unique=False)
    op.create_table('motokonig_profiles',
    sa.Column('user_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('nickname', sa.String(length=30), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('experience_points', sa.Integer(), nullable=False),
    sa.Column('total_distance', sa.Integer(), nullable=False),
    sa.Column('total_rides', sa.Integer(), nullable=False),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('max_speed', sa.Float(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_motokonig_profiles_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_motokonig_profiles')),
    sa.UniqueConstraint('nickname', name=op.f('uq_motokonig_profiles_nickname')),
    sa.UniqueConstraint('user_id', name=op.f('uq_motokonig_profiles_user_id'))
    )
    op.create_table('motorcycles',
    sa.Column('owner_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('brand', sa.String(length=100), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('engine_volume', sa.Integer(), nullable=False),
    sa.Column('engine_type', sa.Enum('inline_2', 'inline_3', 'inline_4', 'v_twin', 'v4', 'single', 'boxer', 'electric', name='engine_type', native_enum=False), nullable=False),
    sa.Column('motorcycle_type', sa.Enum('sport', 'naked', 'touring', 'cruiser', 'chopper', 'adventure', 'dirt_bike', 'supermoto', 'cafe_racer', 'scrambler', 'scooter', 'trike', 'electric', name='motorcycle_type', native_enum=False), nullable=False),
    sa.Column('power', sa.Integer(), nullable=True),
    sa.Column('mileage', sa.Integer(), nullable=True),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_motorcycles_owner_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_motorcycles'))
    )
    op.create_index(op.f('ix_motorcycles_brand'), 'motorcycles', ['brand'], unique=False)
    op.create_index(op.f('ix_motorcycles_is_active'), 'motorcycles', ['is_active'], unique=False)
    op.create_index(op.f('ix_motorcycles_model'), 'motorcycles', ['model'], unique=False)
    op.create_index(op.f('ix_motorcycles_motorcycle_type'), 'motorcycles', ['motorcycle_type'], unique=False)
    op.create_index(op.f('ix_motorcycles_owner_id'), 'motorcycles', ['owner_id'], unique=False)
    op.create_index(op.f('ix_motorcycles_year'), 'motorcycles', ['year'], unique=False)
    op.create_table('profiles',
    sa.Column('user_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('riding_experience', sa.Integer(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('privacy_level', sa.Enum('PUBLIC', 'FRIENDS_ONLY', 'MOTO_CLUB_MEMBERS', 'PRIVATE', name='privacy_level', native_enum=False), nullable=False),
    sa.Column('phone_privacy', sa.Enum('PUBLIC', 'FRIENDS_ONLY', 'MOTO_CLUB_MEMBERS', 'PRIVATE', name='phone_privacy_level', native_enum=False), nullable=False),
    sa.Column('location_privacy', sa.Enum('PUBLIC', 'FRIENDS_ONLY', 'MOTO_CLUB_MEMBERS', 'PRIVATE', name='location_privacy_level', native_enum=False), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_profiles_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_profiles'))
    )
    op.create_index(op.f('ix_profiles_user_id'), 'profiles', ['user_id'], unique=True)
    op.create_table('club_invitations',
    sa.Column('club_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('inviter_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('invitee_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('invited_role', sa.Enum('PRESIDENT', 'VICE_PRESIDENT', 'SECRETARY', 'TREASURER', 'EVENT_ORGANIZER', 'MODERATOR', 'SENIOR_MEMBER', 'MEMBER', name='invited_club_role', native_enum=False), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.String(length=50), nullable=False),
    sa.Column('responded_at', sa.String(length=50), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['moto_clubs.id'], name=op.f('fk_club_invitations_club_id_moto_clubs')),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.id'], name=op.f('fk_club_invitations_invitee_id_users')),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], name=op.f('fk_club_invitations_inviter_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_club_invitations'))
    )
    op.create_index(op.f('ix_club_invitations_club_id'), 'club_invitations', ['club_id'], unique=False)
    op.create_index(op.f('ix_club_invitations_invitee_id'), 'club_invitations', ['invitee_id'], unique=False)
    op.create_index(op.f('ix_club_invitations_inviter_id'), 'club_invitations', ['inviter_id'], unique=False)
    op.create_index(op.f('ix_club_invitations_status'), 'club_invitations', ['status'], unique=False)
    op.create_table('club_memberships',
    sa.Column('club_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('user_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('role', sa.Enum('PRESIDENT', 'VICE_PRESIDENT', 'SECRETARY', 'TREASURER', 'EVENT_ORGANIZER', 'MODERATOR', 'SENIOR_MEMBER', 'MEMBER', name='club_role', native_enum=False), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('joined_at', sa.String(length=50), nullable=False),
    sa.Column('invited_by', advanced_alchemy.types.guid.GUID(length=16), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['moto_clubs.id'], name=op.f('fk_club_memberships_club_id_moto_clubs')),
    sa.ForeignKeyConstraint(['invited_by'], ['users.id'], name=op.f('fk_club_memberships_invited_by_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_club_memberships_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_club_memberships')),
    sa.UniqueConstraint('club_id', 'user_id', name='uq_club_user_membership')
    )
    op.create_index(op.f('ix_club_memberships_club_id'), 'club_memberships', ['club_id'], unique=False)
    op.create_index(op.f('ix_club_memberships_role'), 'club_memberships', ['role'], unique=False)
    op.create_index(op.f('ix_club_memberships_status'), 'club_memberships', ['status'], unique=False)
    op.create_index(op.f('ix_club_memberships_user_id'), 'club_memberships', ['user_id'], unique=False)
    op.create_table('event_participations',
    sa.Column('event_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('user_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_event_participations_event_id_events')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_event_participations_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_event_participations'))
    )
    op.create_index(op.f('ix_event_participations_event_id'), 'event_participations', ['event_id'], unique=False)
    op.create_index(op.f('ix_event_participations_user_id'), 'event_participations', ['user_id'], unique=False)
    op.create_table('listing_favorites',
    sa.Column('user_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('listing_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.id'], name=op.f('fk_listing_favorites_listing_id_listings')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_listing_favorites_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_listing_favorites')),
    sa.UniqueConstraint('user_id', 'listing_id', name='uq_user_listing_favorite')
    )
    op.create_index(op.f('ix_listing_favorites_listing_id'), 'listing_favorites', ['listing_id'], unique=False)
    op.create_index(op.f('ix_listing_favorites_user_id'), 'listing_favorites', ['user_id'], unique=False)
    op.create_table('motokonig_achievements',
    sa.Column('motokonig_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('achievement_type', sa.String(length=50), nullable=False),
    sa.Column('earned_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('achievement_metadata', sa.JSON(), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['motokonig_id'], ['motokonig_profiles.id'], name=op.f('fk_motokonig_achievements_motokonig_id_motokonig_profiles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_motokonig_achievements'))
    )
    op.create_table('rides',
    sa.Column('organizer_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.Integer(), nullable=False),
    sa.Column('planned_distance', sa.Integer(), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=False),
    sa.Column('start_location', sa.String(length=200), nullable=False),
    sa.Column('end_location', sa.String(length=200), nullable=False),
    sa.Column('planned_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('planned_duration', sa.Integer(), nullable=False),
    sa.Column('actual_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_distance', sa.Integer(), nullable=True),
    sa.Column('route_gpx', sa.Text(), nullable=True),
    sa.Column('weather_conditions', sa.String(length=200), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organizer_id'], ['motokonig_profiles.id'], name=op.f('fk_rides_organizer_id_motokonig_profiles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rides'))
    )
    op.create_table('social_links',
    sa.Column('profile_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('platform', sa.Enum('VK', 'TELEGRAM', 'WHATSAPP', 'INSTAGRAM', 'FACEBOOK', 'YOUTUBE', name='social_platform', native_enum=False), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('privacy_level', sa.Enum('PUBLIC', 'FRIENDS_ONLY', 'MOTO_CLUB_MEMBERS', 'PRIVATE', name='social_privacy_level', native_enum=False), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name=op.f('fk_social_links_profile_id_profiles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_social_links')),
    sa.UniqueConstraint('profile_id', 'platform', name='uq_profile_platform')
    )
    op.create_index(op.f('ix_social_links_platform'), 'social_links', ['platform'], unique=False)
    op.create_index(op.f('ix_social_links_profile_id'), 'social_links', ['profile_id'], unique=False)
    op.create_table('ride_checkpoints',
    sa.Column('ride_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('reached_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['ride_id'], ['rides.id'], name=op.f('fk_ride_checkpoints_ride_id_rides')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ride_checkpoints'))
    )
    op.create_table('ride_participants',
    sa.Column('ride_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('motokonig_id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('left_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('distance_covered', sa.Integer(), nullable=False),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('max_speed', sa.Float(), nullable=True),
    sa.Column('is_leader', sa.Boolean(), nullable=False),
    sa.Column('id', advanced_alchemy.types.guid.GUID(length=16), nullable=False),
    sa.Column('sa_orm_sentinel', sa.Integer(), nullable=True),
    sa.Column('created_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.Column('updated_at', advanced_alchemy.types.datetime.DateTimeUTC(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['motokonig_id'], ['motokonig_profiles.id'], name=op.f('fk_ride_participants_motokonig_id_motokonig_profiles')),
    sa.ForeignKeyConstraint(['ride_id'], ['rides.id'], name=op.f('fk_ride_participants_ride_id_rides')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ride_participants'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ride_participants')
    op.drop_table('ride_checkpoints')
    op.drop_index(op.f('ix_social_links_profile_id'), table_name='social_links')
    op.drop_index(op.f('ix_social_links_platform'), table_name='social_links')
    op.drop_table('social_links')
    op.drop_table('rides')
    op.drop_table('motokonig_achievements')
    op.drop_index(op.f('ix_listing_favorites_user_id'), table_name='listing_favorites')
    op.drop_index(op.f('ix_listing_favorites_listing_id'), table_name='listing_favorites')
    op.drop_table('listing_favorites')
    op.drop_index(op.f('ix_event_participations_user_id'), table_name='event_participations')
    op.drop_index(op.f('ix_event_participations_event_id'), table_name='event_participations')
    op.drop_table('event_participations')
    op.drop_index(op.f('ix_club_memberships_user_id'), table_name='club_memberships')
    op.drop_index(op.f('ix_club_memberships_status'), table_name='club_memberships')
    op.drop_index(op.f('ix_club_memberships_role'), table_name='club_memberships')
    op.drop_index(op.f('ix_club_memberships_club_id'), table_name='club_memberships')
    op.drop_table('club_memberships')
    op.drop_index(op.f('ix_club_invitations_status'), table_name='club_invitations')
    op.drop_index(op.f('ix_club_invitations_inviter_id'), table_name='club_invitations')
    op.drop_index(op.f('ix_club_invitations_invitee_id'), table_name='club_invitations')
    op.drop_index(op.f('ix_club_invitations_club_id'), table_name='club_invitations')
    op.drop_table('club_invitations')
    op.drop_index(op.f('ix_profiles_user_id'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_motorcycles_year'), table_name='motorcycles')
    op.drop_index(op.f('ix_motorcycles_owner_id'), table_name='motorcycles')
    op.drop_index(op.f('ix_motorcycles_motorcycle_type'), table_name='motorcycles')
    op.drop_index(op.f('ix_motorcycles_model'), table_name='motorcycles')
    op.drop_index(op.f('ix_motorcycles_is_active'), table_name='motorcycles')
    op.drop_index(op.f('ix_motorcycles_brand'), table_name='motorcycles')
    op.drop_table('motorcycles')
    op.drop_table('motokonig_profiles')
    op.drop_index(op.f('ix_moto_clubs_president_id'), table_name='moto_clubs')
    op.drop_index(op.f('ix_moto_clubs_name'), table_name='moto_clubs')
    op.drop_index(op.f('ix_moto_clubs_is_public'), table_name='moto_clubs')
    op.drop_index(op.f('ix_moto_clubs_is_active'), table_name='moto_clubs')
    op.drop_table('moto_clubs')
    op.drop_index(op.f('ix_media_files_owner_id'), table_name='media_files')
    op.drop_index(op.f('ix_media_files_is_public'), table_name='media_files')
    op.drop_index(op.f('ix_media_files_file_type'), table_name='media_files')
    op.drop_index(op.f('ix_media_files_file_key'), table_name='media_files')
    op.drop_index(op.f('ix_media_files_bucket'), table_name='media_files')
    op.drop_table('media_files')
    op.drop_index(op.f('ix_listings_title'), table_name='listings')
    op.drop_index(op.f('ix_listings_status'), table_name='listings')
    op.drop_index(op.f('ix_listings_seller_id'), table_name='listings')
    op.drop_index(op.f('ix_listings_price'), table_name='listings')
    op.drop_index(op.f('ix_listings_location'), table_name='listings')
    op.drop_index(op.f('ix_listings_is_featured'), table_name='listings')
    op.drop_index(op.f('ix_listings_category'), table_name='listings')
    op.drop_table('listings')
    op.drop_index(op.f('ix_events_title'), table_name='events')
    op.drop_index(op.f('ix_events_start_time'), table_name='events')
    op.drop_index(op.f('ix_events_organizer_id'), table_name='events')
    op.drop_index(op.f('ix_events_event_type'), table_name='events')
    op.drop_table('events')
    op.drop_table('users')
    # ### end Alembic commands ###
