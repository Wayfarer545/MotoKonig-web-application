networks:
  backend:
    name: ec2-user_backend
    driver: bridge

volumes:
  postgres-data:
  minio-data:
  redis-data:

services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped

    environment:
      POSTGRES_DB: ${POSTGRES_DB:-motokonig}
      POSTGRES_USER: ${POSTGRES_USER:-motokonig}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-motokonig}

    volumes:
      - postgres-data:/var/lib/postgresql/data:rw

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-motokonig}"]
      interval: 10s
      timeout: 5s
      retries: 5

    ports:
      - "5432:5432"
    networks:
      - mk_network

  # MinIO — S3‑compatible object storage
  minio:
    image: quay.io/minio/minio:latest
    restart: unless-stopped

    # Expose web console (9001) and S3 API (9000)
    ports:
      - "9000:9000"
      - "9001:9001"

    environment:
      MINIO_ADDRESS: ":9000"
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}

    command: server --console-address ":9001" /data

    volumes:
      - minio-data:/data:rw

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

    networks:
      - mk_network

  # Redis 7 — in‑memory cache & message broker
  redis:
    image: redis:alpine
    restart: unless-stopped

    command: ["redis-server", "--appendonly", "yes"]

    volumes:
      - redis-data:/data:rw

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - mk_network
